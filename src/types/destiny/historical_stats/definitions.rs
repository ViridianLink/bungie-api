use serde::{Deserialize, Deserializer, Serialize, Serializer};

#[repr(u8)]
#[derive(Debug, Copy, Clone)]
pub enum DestinyActivityModeType {
    None = 0,
    Story = 2,
    Strike = 3,
    Raid = 4,
    AllPvP = 5,
    Patrol = 6,
    AllPvE = 7,
    Reserved9 = 9,
    Control = 10,
    Reserved11 = 11,
    Clash = 12,
    Reserved13 = 13,
    CrimsonDoubles = 15,
    Nightfall = 16,
    HeroicNightfall = 17,
    AllStrikes = 18,
    IronBanner = 19,
    Reserved20 = 20,
    Reserved21 = 21,
    Reserved22 = 22,
    Reserved24 = 24,
    AllMayhem = 25,
    Reserved26 = 26,
    Reserved27 = 27,
    Reserved28 = 28,
    Reserved29 = 29,
    Reserved30 = 30,
    Supremacy = 31,
    PrivateMatchesAll = 32,
    Survival = 37,
    Countdown = 38,
    TrialsOfTheNine = 39,
    Social = 40,
    TrialsCountdown = 41,
    TrialsSurvival = 42,
    IronBannerControl = 43,
    IronBannerClash = 44,
    IronBannerSupremacy = 45,
    ScoredNightfall = 46,
    ScoredHeroicNightfall = 47,
    Rumble = 48,
    AllDoubles = 49,
    Doubles = 50,
    PrivateMatchesClash = 51,
    PrivateMatchesControl = 52,
    PrivateMatchesSupremacy = 53,
    PrivateMatchesCountdown = 54,
    PrivateMatchesSurvival = 55,
    PrivateMatchesMayhem = 56,
    PrivateMatchesRumble = 57,
    HeroicAdventure = 58,
    Showdown = 59,
    Lockdown = 60,
    Scorched = 61,
    ScorchedTeam = 62,
    Gambit = 63,
    AllPvECompetitive = 64,
    Breakthrough = 65,
    BlackArmoryRun = 66,
    Salvage = 67,
    IronBannerSalvage = 68,
    PvPCompetitive = 69,
    PvPQuickplay = 70,
    ClashQuickplay = 71,
    ClashCompetitive = 72,
    ControlQuickplay = 73,
    ControlCompetitive = 74,
    GambitPrime = 75,
    Reckoning = 76,
    Menagerie = 77,
    VexOffensive = 78,
    NightmareHunt = 79,
    Elimination = 80,
    Momentum = 81,
    Dungeon = 82,
    Sundial = 83,
    TrialsOfOsiris = 84,
    Dares = 85,
    Offensive = 86,
    LostSector = 87,
    Rift = 88,
    ZoneControl = 89,
    IronBannerRift = 90,
    IronBannerZoneControl = 91,
}

impl<'de> Deserialize<'de> for DestinyActivityModeType {
    fn deserialize<D>(deserializer: D) -> Result<DestinyActivityModeType, D::Error>
    where
        D: Deserializer<'de>,
    {
        let s = u16::deserialize(deserializer)?;
        match s {
            0 => Ok(DestinyActivityModeType::None),
            2 => Ok(DestinyActivityModeType::Story),
            3 => Ok(DestinyActivityModeType::Strike),
            4 => Ok(DestinyActivityModeType::Raid),
            5 => Ok(DestinyActivityModeType::AllPvP),
            6 => Ok(DestinyActivityModeType::Patrol),
            7 => Ok(DestinyActivityModeType::AllPvE),
            9 => Ok(DestinyActivityModeType::Reserved9),
            10 => Ok(DestinyActivityModeType::Control),
            11 => Ok(DestinyActivityModeType::Reserved11),
            12 => Ok(DestinyActivityModeType::Clash),
            13 => Ok(DestinyActivityModeType::Reserved13),
            15 => Ok(DestinyActivityModeType::CrimsonDoubles),
            16 => Ok(DestinyActivityModeType::Nightfall),
            17 => Ok(DestinyActivityModeType::HeroicNightfall),
            18 => Ok(DestinyActivityModeType::AllStrikes),
            19 => Ok(DestinyActivityModeType::IronBanner),
            20 => Ok(DestinyActivityModeType::Reserved20),
            21 => Ok(DestinyActivityModeType::Reserved21),
            22 => Ok(DestinyActivityModeType::Reserved22),
            24 => Ok(DestinyActivityModeType::Reserved24),
            25 => Ok(DestinyActivityModeType::AllMayhem),
            26 => Ok(DestinyActivityModeType::Reserved26),
            27 => Ok(DestinyActivityModeType::Reserved27),
            28 => Ok(DestinyActivityModeType::Reserved28),
            29 => Ok(DestinyActivityModeType::Reserved29),
            30 => Ok(DestinyActivityModeType::Reserved30),
            31 => Ok(DestinyActivityModeType::Supremacy),
            32 => Ok(DestinyActivityModeType::PrivateMatchesAll),
            37 => Ok(DestinyActivityModeType::Survival),
            38 => Ok(DestinyActivityModeType::Countdown),
            39 => Ok(DestinyActivityModeType::TrialsOfTheNine),
            40 => Ok(DestinyActivityModeType::Social),
            41 => Ok(DestinyActivityModeType::TrialsCountdown),
            42 => Ok(DestinyActivityModeType::TrialsSurvival),
            43 => Ok(DestinyActivityModeType::IronBannerControl),
            44 => Ok(DestinyActivityModeType::IronBannerClash),
            45 => Ok(DestinyActivityModeType::IronBannerSupremacy),
            46 => Ok(DestinyActivityModeType::ScoredNightfall),
            47 => Ok(DestinyActivityModeType::ScoredHeroicNightfall),
            48 => Ok(DestinyActivityModeType::Rumble),
            49 => Ok(DestinyActivityModeType::AllDoubles),
            50 => Ok(DestinyActivityModeType::Doubles),
            51 => Ok(DestinyActivityModeType::PrivateMatchesClash),
            52 => Ok(DestinyActivityModeType::PrivateMatchesControl),
            53 => Ok(DestinyActivityModeType::PrivateMatchesSupremacy),
            54 => Ok(DestinyActivityModeType::PrivateMatchesCountdown),
            55 => Ok(DestinyActivityModeType::PrivateMatchesSurvival),
            56 => Ok(DestinyActivityModeType::PrivateMatchesMayhem),
            57 => Ok(DestinyActivityModeType::PrivateMatchesRumble),
            58 => Ok(DestinyActivityModeType::HeroicAdventure),
            59 => Ok(DestinyActivityModeType::Showdown),
            60 => Ok(DestinyActivityModeType::Lockdown),
            61 => Ok(DestinyActivityModeType::Scorched),
            62 => Ok(DestinyActivityModeType::ScorchedTeam),
            63 => Ok(DestinyActivityModeType::Gambit),
            64 => Ok(DestinyActivityModeType::AllPvECompetitive),
            65 => Ok(DestinyActivityModeType::Breakthrough),
            66 => Ok(DestinyActivityModeType::BlackArmoryRun),
            67 => Ok(DestinyActivityModeType::Salvage),
            68 => Ok(DestinyActivityModeType::IronBannerSalvage),
            69 => Ok(DestinyActivityModeType::PvPCompetitive),
            70 => Ok(DestinyActivityModeType::PvPQuickplay),
            71 => Ok(DestinyActivityModeType::ClashQuickplay),
            72 => Ok(DestinyActivityModeType::ClashCompetitive),
            73 => Ok(DestinyActivityModeType::ControlQuickplay),
            74 => Ok(DestinyActivityModeType::ControlCompetitive),
            75 => Ok(DestinyActivityModeType::GambitPrime),
            76 => Ok(DestinyActivityModeType::Reckoning),
            77 => Ok(DestinyActivityModeType::Menagerie),
            78 => Ok(DestinyActivityModeType::VexOffensive),
            79 => Ok(DestinyActivityModeType::NightmareHunt),
            80 => Ok(DestinyActivityModeType::Elimination),
            81 => Ok(DestinyActivityModeType::Momentum),
            82 => Ok(DestinyActivityModeType::Dungeon),
            83 => Ok(DestinyActivityModeType::Sundial),
            84 => Ok(DestinyActivityModeType::TrialsOfOsiris),
            85 => Ok(DestinyActivityModeType::Dares),
            86 => Ok(DestinyActivityModeType::Offensive),
            87 => Ok(DestinyActivityModeType::LostSector),
            88 => Ok(DestinyActivityModeType::Rift),
            89 => Ok(DestinyActivityModeType::ZoneControl),
            90 => Ok(DestinyActivityModeType::IronBannerRift),
            91 => Ok(DestinyActivityModeType::IronBannerZoneControl),
            _ => Err(serde::de::Error::custom(format!(
                "unknown DestinyActivityModeType: {s}",
            ))),
        }
    }
}

impl Serialize for DestinyActivityModeType {
    fn serialize<S>(&self, serializer: S) -> Result<S::Ok, S::Error>
    where
        S: Serializer,
    {
        let s = *self as u8;
        s.serialize(serializer)
    }
}
